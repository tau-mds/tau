/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as AuthLayoutImport } from "./routes/auth/layout";
import { Route as AppLayoutImport } from "./routes/app/layout";
import { Route as LandingLayoutImport } from "./routes/_landing/layout";
import { Route as PlaygroundIndexImport } from "./routes/playground/index";
import { Route as AuthIndexImport } from "./routes/auth/index";
import { Route as AppIndexImport } from "./routes/app/index";
import { Route as LandingIndexImport } from "./routes/_landing/index";
import { Route as AuthSignupImport } from "./routes/auth/signup";
import { Route as AuthSigninImport } from "./routes/auth/signin";
import { Route as AppSettingsLayoutImport } from "./routes/app/settings/layout";
import { Route as AppInterviewRoundsIndexImport } from "./routes/app/interview-rounds/index";
import { Route as AppSettingsAccountLayoutImport } from "./routes/app/settings/account/layout";
import { Route as AppInterviewRoundsRoundIdLayoutImport } from "./routes/app/interview-rounds/$roundId/layout";
import { Route as AppInterviewRoundsRoundIdIndexImport } from "./routes/app/interview-rounds/$roundId/index";
import { Route as AppSettingsAccountProfileImport } from "./routes/app/settings/account/profile";
import { Route as AppSettingsAccountNotificationsImport } from "./routes/app/settings/account/notifications";
import { Route as AppSettingsAccountBerbecaruImport } from "./routes/app/settings/account/berbecaru";
import { Route as AppInterviewRoundsRoundIdScheduleImport } from "./routes/app/interview-rounds/$roundId/schedule";
import { Route as AppInterviewRoundsRoundIdPlanningImport } from "./routes/app/interview-rounds/$roundId/planning";

// Create/Update Routes

const AuthLayoutRoute = AuthLayoutImport.update({
  id: "/auth",
  path: "/auth",
  getParentRoute: () => rootRoute,
} as any);

const AppLayoutRoute = AppLayoutImport.update({
  id: "/app",
  path: "/app",
  getParentRoute: () => rootRoute,
} as any);

const LandingLayoutRoute = LandingLayoutImport.update({
  id: "/_landing",
  getParentRoute: () => rootRoute,
} as any);

const PlaygroundIndexRoute = PlaygroundIndexImport.update({
  id: "/playground/",
  path: "/playground/",
  getParentRoute: () => rootRoute,
} as any);

const AuthIndexRoute = AuthIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AuthLayoutRoute,
} as any);

const AppIndexRoute = AppIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => AppLayoutRoute,
} as any);

const LandingIndexRoute = LandingIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => LandingLayoutRoute,
} as any);

const AuthSignupRoute = AuthSignupImport.update({
  id: "/signup",
  path: "/signup",
  getParentRoute: () => AuthLayoutRoute,
} as any);

const AuthSigninRoute = AuthSigninImport.update({
  id: "/signin",
  path: "/signin",
  getParentRoute: () => AuthLayoutRoute,
} as any);

const AppSettingsLayoutRoute = AppSettingsLayoutImport.update({
  id: "/settings",
  path: "/settings",
  getParentRoute: () => AppLayoutRoute,
} as any);

const AppInterviewRoundsIndexRoute = AppInterviewRoundsIndexImport.update({
  id: "/interview-rounds/",
  path: "/interview-rounds/",
  getParentRoute: () => AppLayoutRoute,
} as any);

const AppSettingsAccountLayoutRoute = AppSettingsAccountLayoutImport.update({
  id: "/account",
  path: "/account",
  getParentRoute: () => AppSettingsLayoutRoute,
} as any);

const AppInterviewRoundsRoundIdLayoutRoute =
  AppInterviewRoundsRoundIdLayoutImport.update({
    id: "/interview-rounds/$roundId",
    path: "/interview-rounds/$roundId",
    getParentRoute: () => AppLayoutRoute,
  } as any);

const AppInterviewRoundsRoundIdIndexRoute =
  AppInterviewRoundsRoundIdIndexImport.update({
    id: "/",
    path: "/",
    getParentRoute: () => AppInterviewRoundsRoundIdLayoutRoute,
  } as any);

const AppSettingsAccountProfileRoute = AppSettingsAccountProfileImport.update({
  id: "/profile",
  path: "/profile",
  getParentRoute: () => AppSettingsAccountLayoutRoute,
} as any);

const AppSettingsAccountNotificationsRoute =
  AppSettingsAccountNotificationsImport.update({
    id: "/notifications",
    path: "/notifications",
    getParentRoute: () => AppSettingsAccountLayoutRoute,
  } as any);

const AppSettingsAccountBerbecaruRoute =
  AppSettingsAccountBerbecaruImport.update({
    id: "/berbecaru",
    path: "/berbecaru",
    getParentRoute: () => AppSettingsAccountLayoutRoute,
  } as any);

const AppInterviewRoundsRoundIdScheduleRoute =
  AppInterviewRoundsRoundIdScheduleImport.update({
    id: "/schedule",
    path: "/schedule",
    getParentRoute: () => AppInterviewRoundsRoundIdLayoutRoute,
  } as any);

const AppInterviewRoundsRoundIdPlanningRoute =
  AppInterviewRoundsRoundIdPlanningImport.update({
    id: "/planning",
    path: "/planning",
    getParentRoute: () => AppInterviewRoundsRoundIdLayoutRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/_landing": {
      id: "/_landing";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LandingLayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/app": {
      id: "/app";
      path: "/app";
      fullPath: "/app";
      preLoaderRoute: typeof AppLayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/auth": {
      id: "/auth";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthLayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/app/settings": {
      id: "/app/settings";
      path: "/settings";
      fullPath: "/app/settings";
      preLoaderRoute: typeof AppSettingsLayoutImport;
      parentRoute: typeof AppLayoutImport;
    };
    "/auth/signin": {
      id: "/auth/signin";
      path: "/signin";
      fullPath: "/auth/signin";
      preLoaderRoute: typeof AuthSigninImport;
      parentRoute: typeof AuthLayoutImport;
    };
    "/auth/signup": {
      id: "/auth/signup";
      path: "/signup";
      fullPath: "/auth/signup";
      preLoaderRoute: typeof AuthSignupImport;
      parentRoute: typeof AuthLayoutImport;
    };
    "/_landing/": {
      id: "/_landing/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof LandingIndexImport;
      parentRoute: typeof LandingLayoutImport;
    };
    "/app/": {
      id: "/app/";
      path: "/";
      fullPath: "/app/";
      preLoaderRoute: typeof AppIndexImport;
      parentRoute: typeof AppLayoutImport;
    };
    "/auth/": {
      id: "/auth/";
      path: "/";
      fullPath: "/auth/";
      preLoaderRoute: typeof AuthIndexImport;
      parentRoute: typeof AuthLayoutImport;
    };
    "/playground/": {
      id: "/playground/";
      path: "/playground";
      fullPath: "/playground";
      preLoaderRoute: typeof PlaygroundIndexImport;
      parentRoute: typeof rootRoute;
    };
    "/app/interview-rounds/$roundId": {
      id: "/app/interview-rounds/$roundId";
      path: "/interview-rounds/$roundId";
      fullPath: "/app/interview-rounds/$roundId";
      preLoaderRoute: typeof AppInterviewRoundsRoundIdLayoutImport;
      parentRoute: typeof AppLayoutImport;
    };
    "/app/settings/account": {
      id: "/app/settings/account";
      path: "/account";
      fullPath: "/app/settings/account";
      preLoaderRoute: typeof AppSettingsAccountLayoutImport;
      parentRoute: typeof AppSettingsLayoutImport;
    };
    "/app/interview-rounds/": {
      id: "/app/interview-rounds/";
      path: "/interview-rounds";
      fullPath: "/app/interview-rounds";
      preLoaderRoute: typeof AppInterviewRoundsIndexImport;
      parentRoute: typeof AppLayoutImport;
    };
    "/app/interview-rounds/$roundId/planning": {
      id: "/app/interview-rounds/$roundId/planning";
      path: "/planning";
      fullPath: "/app/interview-rounds/$roundId/planning";
      preLoaderRoute: typeof AppInterviewRoundsRoundIdPlanningImport;
      parentRoute: typeof AppInterviewRoundsRoundIdLayoutImport;
    };
    "/app/interview-rounds/$roundId/schedule": {
      id: "/app/interview-rounds/$roundId/schedule";
      path: "/schedule";
      fullPath: "/app/interview-rounds/$roundId/schedule";
      preLoaderRoute: typeof AppInterviewRoundsRoundIdScheduleImport;
      parentRoute: typeof AppInterviewRoundsRoundIdLayoutImport;
    };
    "/app/settings/account/berbecaru": {
      id: "/app/settings/account/berbecaru";
      path: "/berbecaru";
      fullPath: "/app/settings/account/berbecaru";
      preLoaderRoute: typeof AppSettingsAccountBerbecaruImport;
      parentRoute: typeof AppSettingsAccountLayoutImport;
    };
    "/app/settings/account/notifications": {
      id: "/app/settings/account/notifications";
      path: "/notifications";
      fullPath: "/app/settings/account/notifications";
      preLoaderRoute: typeof AppSettingsAccountNotificationsImport;
      parentRoute: typeof AppSettingsAccountLayoutImport;
    };
    "/app/settings/account/profile": {
      id: "/app/settings/account/profile";
      path: "/profile";
      fullPath: "/app/settings/account/profile";
      preLoaderRoute: typeof AppSettingsAccountProfileImport;
      parentRoute: typeof AppSettingsAccountLayoutImport;
    };
    "/app/interview-rounds/$roundId/": {
      id: "/app/interview-rounds/$roundId/";
      path: "/";
      fullPath: "/app/interview-rounds/$roundId/";
      preLoaderRoute: typeof AppInterviewRoundsRoundIdIndexImport;
      parentRoute: typeof AppInterviewRoundsRoundIdLayoutImport;
    };
  }
}

// Create and export the route tree

interface LandingLayoutRouteChildren {
  LandingIndexRoute: typeof LandingIndexRoute;
}

const LandingLayoutRouteChildren: LandingLayoutRouteChildren = {
  LandingIndexRoute: LandingIndexRoute,
};

const LandingLayoutRouteWithChildren = LandingLayoutRoute._addFileChildren(
  LandingLayoutRouteChildren,
);

interface AppSettingsAccountLayoutRouteChildren {
  AppSettingsAccountBerbecaruRoute: typeof AppSettingsAccountBerbecaruRoute;
  AppSettingsAccountNotificationsRoute: typeof AppSettingsAccountNotificationsRoute;
  AppSettingsAccountProfileRoute: typeof AppSettingsAccountProfileRoute;
}

const AppSettingsAccountLayoutRouteChildren: AppSettingsAccountLayoutRouteChildren =
  {
    AppSettingsAccountBerbecaruRoute: AppSettingsAccountBerbecaruRoute,
    AppSettingsAccountNotificationsRoute: AppSettingsAccountNotificationsRoute,
    AppSettingsAccountProfileRoute: AppSettingsAccountProfileRoute,
  };

const AppSettingsAccountLayoutRouteWithChildren =
  AppSettingsAccountLayoutRoute._addFileChildren(
    AppSettingsAccountLayoutRouteChildren,
  );

interface AppSettingsLayoutRouteChildren {
  AppSettingsAccountLayoutRoute: typeof AppSettingsAccountLayoutRouteWithChildren;
}

const AppSettingsLayoutRouteChildren: AppSettingsLayoutRouteChildren = {
  AppSettingsAccountLayoutRoute: AppSettingsAccountLayoutRouteWithChildren,
};

const AppSettingsLayoutRouteWithChildren =
  AppSettingsLayoutRoute._addFileChildren(AppSettingsLayoutRouteChildren);

interface AppInterviewRoundsRoundIdLayoutRouteChildren {
  AppInterviewRoundsRoundIdPlanningRoute: typeof AppInterviewRoundsRoundIdPlanningRoute;
  AppInterviewRoundsRoundIdScheduleRoute: typeof AppInterviewRoundsRoundIdScheduleRoute;
  AppInterviewRoundsRoundIdIndexRoute: typeof AppInterviewRoundsRoundIdIndexRoute;
}

const AppInterviewRoundsRoundIdLayoutRouteChildren: AppInterviewRoundsRoundIdLayoutRouteChildren =
  {
    AppInterviewRoundsRoundIdPlanningRoute:
      AppInterviewRoundsRoundIdPlanningRoute,
    AppInterviewRoundsRoundIdScheduleRoute:
      AppInterviewRoundsRoundIdScheduleRoute,
    AppInterviewRoundsRoundIdIndexRoute: AppInterviewRoundsRoundIdIndexRoute,
  };

const AppInterviewRoundsRoundIdLayoutRouteWithChildren =
  AppInterviewRoundsRoundIdLayoutRoute._addFileChildren(
    AppInterviewRoundsRoundIdLayoutRouteChildren,
  );

interface AppLayoutRouteChildren {
  AppSettingsLayoutRoute: typeof AppSettingsLayoutRouteWithChildren;
  AppIndexRoute: typeof AppIndexRoute;
  AppInterviewRoundsRoundIdLayoutRoute: typeof AppInterviewRoundsRoundIdLayoutRouteWithChildren;
  AppInterviewRoundsIndexRoute: typeof AppInterviewRoundsIndexRoute;
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppSettingsLayoutRoute: AppSettingsLayoutRouteWithChildren,
  AppIndexRoute: AppIndexRoute,
  AppInterviewRoundsRoundIdLayoutRoute:
    AppInterviewRoundsRoundIdLayoutRouteWithChildren,
  AppInterviewRoundsIndexRoute: AppInterviewRoundsIndexRoute,
};

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
);

interface AuthLayoutRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute;
  AuthSignupRoute: typeof AuthSignupRoute;
  AuthIndexRoute: typeof AuthIndexRoute;
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthIndexRoute: AuthIndexRoute,
};

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
);

export interface FileRoutesByFullPath {
  "": typeof LandingLayoutRouteWithChildren;
  "/app": typeof AppLayoutRouteWithChildren;
  "/auth": typeof AuthLayoutRouteWithChildren;
  "/app/settings": typeof AppSettingsLayoutRouteWithChildren;
  "/auth/signin": typeof AuthSigninRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/": typeof LandingIndexRoute;
  "/app/": typeof AppIndexRoute;
  "/auth/": typeof AuthIndexRoute;
  "/playground": typeof PlaygroundIndexRoute;
  "/app/interview-rounds/$roundId": typeof AppInterviewRoundsRoundIdLayoutRouteWithChildren;
  "/app/settings/account": typeof AppSettingsAccountLayoutRouteWithChildren;
  "/app/interview-rounds": typeof AppInterviewRoundsIndexRoute;
  "/app/interview-rounds/$roundId/planning": typeof AppInterviewRoundsRoundIdPlanningRoute;
  "/app/interview-rounds/$roundId/schedule": typeof AppInterviewRoundsRoundIdScheduleRoute;
  "/app/settings/account/berbecaru": typeof AppSettingsAccountBerbecaruRoute;
  "/app/settings/account/notifications": typeof AppSettingsAccountNotificationsRoute;
  "/app/settings/account/profile": typeof AppSettingsAccountProfileRoute;
  "/app/interview-rounds/$roundId/": typeof AppInterviewRoundsRoundIdIndexRoute;
}

export interface FileRoutesByTo {
  "/app/settings": typeof AppSettingsLayoutRouteWithChildren;
  "/auth/signin": typeof AuthSigninRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/": typeof LandingIndexRoute;
  "/app": typeof AppIndexRoute;
  "/auth": typeof AuthIndexRoute;
  "/playground": typeof PlaygroundIndexRoute;
  "/app/settings/account": typeof AppSettingsAccountLayoutRouteWithChildren;
  "/app/interview-rounds": typeof AppInterviewRoundsIndexRoute;
  "/app/interview-rounds/$roundId/planning": typeof AppInterviewRoundsRoundIdPlanningRoute;
  "/app/interview-rounds/$roundId/schedule": typeof AppInterviewRoundsRoundIdScheduleRoute;
  "/app/settings/account/berbecaru": typeof AppSettingsAccountBerbecaruRoute;
  "/app/settings/account/notifications": typeof AppSettingsAccountNotificationsRoute;
  "/app/settings/account/profile": typeof AppSettingsAccountProfileRoute;
  "/app/interview-rounds/$roundId": typeof AppInterviewRoundsRoundIdIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_landing": typeof LandingLayoutRouteWithChildren;
  "/app": typeof AppLayoutRouteWithChildren;
  "/auth": typeof AuthLayoutRouteWithChildren;
  "/app/settings": typeof AppSettingsLayoutRouteWithChildren;
  "/auth/signin": typeof AuthSigninRoute;
  "/auth/signup": typeof AuthSignupRoute;
  "/_landing/": typeof LandingIndexRoute;
  "/app/": typeof AppIndexRoute;
  "/auth/": typeof AuthIndexRoute;
  "/playground/": typeof PlaygroundIndexRoute;
  "/app/interview-rounds/$roundId": typeof AppInterviewRoundsRoundIdLayoutRouteWithChildren;
  "/app/settings/account": typeof AppSettingsAccountLayoutRouteWithChildren;
  "/app/interview-rounds/": typeof AppInterviewRoundsIndexRoute;
  "/app/interview-rounds/$roundId/planning": typeof AppInterviewRoundsRoundIdPlanningRoute;
  "/app/interview-rounds/$roundId/schedule": typeof AppInterviewRoundsRoundIdScheduleRoute;
  "/app/settings/account/berbecaru": typeof AppSettingsAccountBerbecaruRoute;
  "/app/settings/account/notifications": typeof AppSettingsAccountNotificationsRoute;
  "/app/settings/account/profile": typeof AppSettingsAccountProfileRoute;
  "/app/interview-rounds/$roundId/": typeof AppInterviewRoundsRoundIdIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | ""
    | "/app"
    | "/auth"
    | "/app/settings"
    | "/auth/signin"
    | "/auth/signup"
    | "/"
    | "/app/"
    | "/auth/"
    | "/playground"
    | "/app/interview-rounds/$roundId"
    | "/app/settings/account"
    | "/app/interview-rounds"
    | "/app/interview-rounds/$roundId/planning"
    | "/app/interview-rounds/$roundId/schedule"
    | "/app/settings/account/berbecaru"
    | "/app/settings/account/notifications"
    | "/app/settings/account/profile"
    | "/app/interview-rounds/$roundId/";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/app/settings"
    | "/auth/signin"
    | "/auth/signup"
    | "/"
    | "/app"
    | "/auth"
    | "/playground"
    | "/app/settings/account"
    | "/app/interview-rounds"
    | "/app/interview-rounds/$roundId/planning"
    | "/app/interview-rounds/$roundId/schedule"
    | "/app/settings/account/berbecaru"
    | "/app/settings/account/notifications"
    | "/app/settings/account/profile"
    | "/app/interview-rounds/$roundId";
  id:
    | "__root__"
    | "/_landing"
    | "/app"
    | "/auth"
    | "/app/settings"
    | "/auth/signin"
    | "/auth/signup"
    | "/_landing/"
    | "/app/"
    | "/auth/"
    | "/playground/"
    | "/app/interview-rounds/$roundId"
    | "/app/settings/account"
    | "/app/interview-rounds/"
    | "/app/interview-rounds/$roundId/planning"
    | "/app/interview-rounds/$roundId/schedule"
    | "/app/settings/account/berbecaru"
    | "/app/settings/account/notifications"
    | "/app/settings/account/profile"
    | "/app/interview-rounds/$roundId/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  LandingLayoutRoute: typeof LandingLayoutRouteWithChildren;
  AppLayoutRoute: typeof AppLayoutRouteWithChildren;
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren;
  PlaygroundIndexRoute: typeof PlaygroundIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  LandingLayoutRoute: LandingLayoutRouteWithChildren,
  AppLayoutRoute: AppLayoutRouteWithChildren,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  PlaygroundIndexRoute: PlaygroundIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_landing",
        "/app",
        "/auth",
        "/playground/"
      ]
    },
    "/_landing": {
      "filePath": "_landing/layout.tsx",
      "children": [
        "/_landing/"
      ]
    },
    "/app": {
      "filePath": "app/layout.tsx",
      "children": [
        "/app/settings",
        "/app/",
        "/app/interview-rounds/$roundId",
        "/app/interview-rounds/"
      ]
    },
    "/auth": {
      "filePath": "auth/layout.tsx",
      "children": [
        "/auth/signin",
        "/auth/signup",
        "/auth/"
      ]
    },
    "/app/settings": {
      "filePath": "app/settings/layout.tsx",
      "parent": "/app",
      "children": [
        "/app/settings/account"
      ]
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx",
      "parent": "/auth"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx",
      "parent": "/auth"
    },
    "/_landing/": {
      "filePath": "_landing/index.tsx",
      "parent": "/_landing"
    },
    "/app/": {
      "filePath": "app/index.tsx",
      "parent": "/app"
    },
    "/auth/": {
      "filePath": "auth/index.tsx",
      "parent": "/auth"
    },
    "/playground/": {
      "filePath": "playground/index.tsx"
    },
    "/app/interview-rounds/$roundId": {
      "filePath": "app/interview-rounds/$roundId/layout.tsx",
      "parent": "/app",
      "children": [
        "/app/interview-rounds/$roundId/planning",
        "/app/interview-rounds/$roundId/schedule",
        "/app/interview-rounds/$roundId/"
      ]
    },
    "/app/settings/account": {
      "filePath": "app/settings/account/layout.tsx",
      "parent": "/app/settings",
      "children": [
        "/app/settings/account/berbecaru",
        "/app/settings/account/notifications",
        "/app/settings/account/profile"
      ]
    },
    "/app/interview-rounds/": {
      "filePath": "app/interview-rounds/index.tsx",
      "parent": "/app"
    },
    "/app/interview-rounds/$roundId/planning": {
      "filePath": "app/interview-rounds/$roundId/planning.tsx",
      "parent": "/app/interview-rounds/$roundId"
    },
    "/app/interview-rounds/$roundId/schedule": {
      "filePath": "app/interview-rounds/$roundId/schedule.tsx",
      "parent": "/app/interview-rounds/$roundId"
    },
    "/app/settings/account/berbecaru": {
      "filePath": "app/settings/account/berbecaru.tsx",
      "parent": "/app/settings/account"
    },
    "/app/settings/account/notifications": {
      "filePath": "app/settings/account/notifications.tsx",
      "parent": "/app/settings/account"
    },
    "/app/settings/account/profile": {
      "filePath": "app/settings/account/profile.tsx",
      "parent": "/app/settings/account"
    },
    "/app/interview-rounds/$roundId/": {
      "filePath": "app/interview-rounds/$roundId/index.tsx",
      "parent": "/app/interview-rounds/$roundId"
    }
  }
}
ROUTE_MANIFEST_END */
