/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CreateAppointmentIndexImport } from './routes/create-appointment/index'
import { Route as AppointmentHashedroomidHasheduseridIndexImport } from './routes/appointment/$hashed_room_id/$hashed_user_id/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CreateAppointmentIndexRoute = CreateAppointmentIndexImport.update({
  id: '/create-appointment/',
  path: '/create-appointment/',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentHashedroomidHasheduseridIndexRoute =
  AppointmentHashedroomidHasheduseridIndexImport.update({
    id: '/appointment/$hashed_room_id/$hashed_user_id/',
    path: '/appointment/$hashed_room_id/$hashed_user_id/',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-appointment/': {
      id: '/create-appointment/'
      path: '/create-appointment'
      fullPath: '/create-appointment'
      preLoaderRoute: typeof CreateAppointmentIndexImport
      parentRoute: typeof rootRoute
    }
    '/appointment/$hashed_room_id/$hashed_user_id/': {
      id: '/appointment/$hashed_room_id/$hashed_user_id/'
      path: '/appointment/$hashed_room_id/$hashed_user_id'
      fullPath: '/appointment/$hashed_room_id/$hashed_user_id'
      preLoaderRoute: typeof AppointmentHashedroomidHasheduseridIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-appointment': typeof CreateAppointmentIndexRoute
  '/appointment/$hashed_room_id/$hashed_user_id': typeof AppointmentHashedroomidHasheduseridIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-appointment': typeof CreateAppointmentIndexRoute
  '/appointment/$hashed_room_id/$hashed_user_id': typeof AppointmentHashedroomidHasheduseridIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-appointment/': typeof CreateAppointmentIndexRoute
  '/appointment/$hashed_room_id/$hashed_user_id/': typeof AppointmentHashedroomidHasheduseridIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-appointment'
    | '/appointment/$hashed_room_id/$hashed_user_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-appointment'
    | '/appointment/$hashed_room_id/$hashed_user_id'
  id:
    | '__root__'
    | '/'
    | '/create-appointment/'
    | '/appointment/$hashed_room_id/$hashed_user_id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateAppointmentIndexRoute: typeof CreateAppointmentIndexRoute
  AppointmentHashedroomidHasheduseridIndexRoute: typeof AppointmentHashedroomidHasheduseridIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateAppointmentIndexRoute: CreateAppointmentIndexRoute,
  AppointmentHashedroomidHasheduseridIndexRoute:
    AppointmentHashedroomidHasheduseridIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-appointment/",
        "/appointment/$hashed_room_id/$hashed_user_id/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-appointment/": {
      "filePath": "create-appointment/index.tsx"
    },
    "/appointment/$hashed_room_id/$hashed_user_id/": {
      "filePath": "appointment/$hashed_room_id/$hashed_user_id/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
